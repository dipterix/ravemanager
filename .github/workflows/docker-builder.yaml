# .github/workflows/docker-builder.yml
name: docker-builder

on:
  push:
    branches: [ main ]
    tags: [ "v*" ]
  schedule:
    # Runs at 00:00 UTC every Saturday
    - cron: "0 0 * * 6"

permissions:
  contents: read
  packages: write

env:
  IMAGE: ghcr.io/${{ github.repository }}

concurrency:
  group: docker-build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        include:
          - arch: amd64
            runs-on: ubuntu-latest        # GH-hosted amd64
            platform: linux/amd64
          - arch: arm64
            runs-on: ubuntu-24.04-arm     # GH-hosted arm64
            platform: linux/arm64
    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=main,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Build and push (per-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          platforms: ${{ matrix.platform }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.IMAGE }}:${{ matrix.arch }}-${{ github.ref_name }}
            ${{ env.IMAGE }}:${{ matrix.arch }}-${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
          # Cross-run cache: use both GHA cache and a registry cache per arch
          cache-from: |
            type=gha,scope=${{ github.ref_name }}-${{ matrix.arch }}
            type=registry,ref=${{ env.IMAGE }}:buildcache-${{ matrix.arch }}
          cache-to: |
            type=gha,mode=max,scope=${{ github.ref_name }}-${{ matrix.arch }}
            type=registry,ref=${{ env.IMAGE }}:buildcache-${{ matrix.arch }},mode=max
          # optional attestations
          provenance: true
          sbom: true

  manifest:
    if: ${{ github.event_name != 'pull_request' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest (branch tag)
        run: |
          IMAGE="${{ env.IMAGE }}"
          TAG="${{ github.ref_name }}"
          docker buildx imagetools create -t "$IMAGE:$TAG" \
            "$IMAGE:amd64-$TAG" "$IMAGE:arm64-$TAG"

      - name: Create and push manifest (sha tag)
        run: |
          IMAGE="${{ env.IMAGE }}"
          TAG="${{ github.sha }}"
          docker buildx imagetools create -t "$IMAGE:$TAG" \
            "$IMAGE:amd64-$TAG" "$IMAGE:arm64-$TAG"

      # Optional: also point unified tags
      - name: Point :main to branch manifest
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          IMAGE="${{ env.IMAGE }}"
          TAG="${{ github.ref_name }}"
          docker buildx imagetools create -t "$IMAGE:main" \
            "$IMAGE:amd64-$TAG" "$IMAGE:arm64-$TAG"

      - name: Point :latest to versioned manifest
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          IMAGE="${{ env.IMAGE }}"
          TAG="${GITHUB_REF#refs/tags/}"
          docker buildx imagetools create -t "$IMAGE:latest" \
            "$IMAGE:amd64-$TAG" "$IMAGE:arm64-$TAG"
